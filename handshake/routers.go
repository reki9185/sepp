/*
 * N32 Handshake API
 *
 * N32-c Handshake Service.  Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved. 
 *
 * API version: 1.1.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
    AddService(router)
	return router
}

func AddService(engine *gin.Engine) *gin.RouterGroup {
    group := engine.Group("/n32c-handshake/v1")

    for _, route := range routes {
        switch route.Method {
        case "GET":
            group.GET(route.Pattern, route.HandlerFunc)
        case "POST":
            group.POST(route.Pattern, route.HandlerFunc)
        case "PUT":
            group.PUT(route.Pattern, route.HandlerFunc)
        case "DELETE":
            group.DELETE(route.Pattern, route.HandlerFunc)
        case "PATCH":
            group.PATCH(route.Pattern, route.HandlerFunc)
        }
    }
    return group
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"/",
		Index,
	},

	{
		"PostN32fTerminate",
		strings.ToUpper("Post"),
		"/n32f-terminate",
		PostN32fTerminate,
	},

	{
		"PostN32fError",
		strings.ToUpper("Post"),
		"/n32f-error",
		PostN32fError,
	},

	{
		"PostExchangeParams",
		strings.ToUpper("Post"),
		"/exchange-params",
		PostExchangeParams,
	},

	{
		"PostExchangeCapability",
		strings.ToUpper("Post"),
		"/exchange-capability",
		PostExchangeCapability,
	},
}
